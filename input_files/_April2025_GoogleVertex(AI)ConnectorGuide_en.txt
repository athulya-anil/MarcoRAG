Informatica® Cloud Application Integration
April 2025

Google Vertex AI Connector
Guide

Informatica Cloud Application Integration Google Vertex AI Connector Guide
April 2025
© Copyright Informatica LLC 2024, 2025

This software and documentation contain proprietary information of Informatica LLC and are provided under a license agreement containing restrictions on use and
disclosure and are also protected by copyright law. Reverse engineering of the software is prohibited. No part of this document may be reproduced or transmitted in any
form, by any means (electronic, photocopying, recording or otherwise) without prior consent of Informatica LLC. This Software may be protected by U.S. and/or
international Patents and other Patents Pending.
Use, duplication, or disclosure of the Software by the U.S. Government is subject to the restrictions set forth in the applicable software license agreement and as
provided in DFARS 227.7202-1(a) and 227.7702-3(a) (1995), DFARS 252.227-7013©(1)(ii) (OCT 1988), FAR 12.212(a) (1995), FAR 52.227-19, or FAR 52.227-14 (ALT III),
as applicable.
The information in this product or documentation is subject to change without notice. If you find any problems in this product or documentation, please report them to
us in writing.
Informatica, Informatica Platform, Informatica Data Services, PowerCenter, PowerCenterRT, PowerCenter Connect, PowerCenter Data Analyzer, PowerExchange,
PowerMart, Metadata Manager, Informatica Data Quality, Informatica Data Explorer, Informatica B2B Data Transformation, Informatica B2B Data Exchange Informatica
On Demand, Informatica Identity Resolution, Informatica Application Information Lifecycle Management, Informatica Complex Event Processing, Ultra Messaging,
Informatica Master Data Management, and Live Data Map are trademarks or registered trademarks of Informatica LLC in the United States and in jurisdictions
throughout the world. All other company and product names may be trade names or trademarks of their respective owners.
Portions of this software and/or documentation are subject to copyright held by third parties, including without limitation: Copyright DataDirect Technologies. All rights
reserved. Copyright © Sun Microsystems. All rights reserved. Copyright © RSA Security Inc. All Rights Reserved. Copyright © Ordinal Technology Corp. All rights
reserved. Copyright © Aandacht c.v. All rights reserved. Copyright Genivia, Inc. All rights reserved. Copyright Isomorphic Software. All rights reserved. Copyright © Meta
Integration Technology, Inc. All rights reserved. Copyright © Intalio. All rights reserved. Copyright © Oracle. All rights reserved. Copyright © Adobe Systems Incorporated.
All rights reserved. Copyright © DataArt, Inc. All rights reserved. Copyright © ComponentSource. All rights reserved. Copyright © Microsoft Corporation. All rights
reserved. Copyright © Rogue Wave Software, Inc. All rights reserved. Copyright © Teradata Corporation. All rights reserved. Copyright © Yahoo! Inc. All rights reserved.
Copyright © Glyph & Cog, LLC. All rights reserved. Copyright © Thinkmap, Inc. All rights reserved. Copyright © Clearpace Software Limited. All rights reserved. Copyright
© Information Builders, Inc. All rights reserved. Copyright © OSS Nokalva, Inc. All rights reserved. Copyright Edifecs, Inc. All rights reserved. Copyright Cleo
Communications, Inc. All rights reserved. Copyright © International Organization for Standardization 1986. All rights reserved. Copyright © ej-technologies GmbH. All
rights reserved. Copyright © Jaspersoft Corporation. All rights reserved. Copyright © International Business Machines Corporation. All rights reserved. Copyright ©
yWorks GmbH. All rights reserved. Copyright © Lucent Technologies. All rights reserved. Copyright © University of Toronto. All rights reserved. Copyright © Daniel
Veillard. All rights reserved. Copyright © Unicode, Inc. Copyright IBM Corp. All rights reserved. Copyright © MicroQuill Software Publishing, Inc. All rights reserved.
Copyright © PassMark Software Pty Ltd. All rights reserved. Copyright © LogiXML, Inc. All rights reserved. Copyright © 2003-2010 Lorenzi Davide, All rights reserved.
Copyright © Red Hat, Inc. All rights reserved. Copyright © The Board of Trustees of the Leland Stanford Junior University. All rights reserved. Copyright © EMC
Corporation. All rights reserved. Copyright © Flexera Software. All rights reserved. Copyright © Jinfonet Software. All rights reserved. Copyright © Apple Inc. All rights
reserved. Copyright © Telerik Inc. All rights reserved. Copyright © BEA Systems. All rights reserved. Copyright © PDFlib GmbH. All rights reserved. Copyright ©
Orientation in Objects GmbH. All rights reserved. Copyright © Tanuki Software, Ltd. All rights reserved. Copyright © Ricebridge. All rights reserved. Copyright © Sencha,
Inc. All rights reserved. Copyright © Scalable Systems, Inc. All rights reserved. Copyright © jQWidgets. All rights reserved. Copyright © Tableau Software, Inc. All rights
reserved. Copyright© MaxMind, Inc. All Rights Reserved. Copyright © TMate Software s.r.o. All rights reserved. Copyright © MapR Technologies Inc. All rights reserved.
Copyright © Amazon Corporate LLC. All rights reserved. Copyright © Highsoft. All rights reserved. Copyright © Python Software Foundation. All rights reserved.
Copyright © BeOpen.com. All rights reserved. Copyright © CNRI. All rights reserved.
This product includes software developed by the Apache Software Foundation (http://www.apache.org/), and/or other software which is licensed under various
versions of the Apache License (the "License"). You may obtain a copy of these Licenses at http://www.apache.org/licenses/. Unless required by applicable law or
agreed to in writing, software distributed under these Licenses is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
or implied. See the Licenses for the specific language governing permissions and limitations under the Licenses.
This product includes software which was developed by Mozilla (http://www.mozilla.org/), software copyright The JBoss Group, LLC, all rights reserved; software
copyright © 1999-2006 by Bruno Lowagie and Paulo Soares and other software which is licensed under various versions of the GNU Lesser General Public License
Agreement, which may be found at http:// www.gnu.org/licenses/lgpl.html. The materials are provided free of charge by Informatica, "as-is", without warranty of any
kind, either express or implied, including but not limited to the implied warranties of merchantability and fitness for a particular purpose.
The product includes ACE(TM) and TAO(TM) software copyrighted by Douglas C. Schmidt and his research group at Washington University, University of California,
Irvine, and Vanderbilt University, Copyright (©) 1993-2006, all rights reserved.
This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit (copyright The OpenSSL Project. All Rights Reserved) and
redistribution of this software is subject to terms available at http://www.openssl.org and http://www.openssl.org/source/license.html.
This product includes Curl software which is Copyright 1996-2013, Daniel Stenberg, <daniel@haxx.se>. All Rights Reserved. Permissions and limitations regarding this
software are subject to terms available at http://curl.haxx.se/docs/copyright.html. Permission to use, copy, modify, and distribute this software for any purpose with or
without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.
The product includes software copyright 2001-2005 (©) MetaStuff, Ltd. All Rights Reserved. Permissions and limitations regarding this software are subject to terms
available at http://www.dom4j.org/ license.html.
The product includes software copyright © 2004-2007, The Dojo Foundation. All Rights Reserved. Permissions and limitations regarding this software are subject to
terms available at http://dojotoolkit.org/license.
This product includes ICU software which is copyright International Business Machines Corporation and others. All rights reserved. Permissions and limitations
regarding this software are subject to terms available at http://source.icu-project.org/repos/icu/icu/trunk/license.html.
This product includes software copyright © 1996-2006 Per Bothner. All rights reserved. Your right to use such materials is set forth in the license which may be found at
http:// www.gnu.org/software/ kawa/Software-License.html.
This product includes OSSP UUID software which is Copyright © 2002 Ralf S. Engelschall, Copyright © 2002 The OSSP Project Copyright © 2002 Cable & Wireless
Deutschland. Permissions and limitations regarding this software are subject to terms available at http://www.opensource.org/licenses/mit-license.php.
This product includes software developed by Boost (http://www.boost.org/) or under the Boost software license. Permissions and limitations regarding this software
are subject to terms available at http:/ /www.boost.org/LICENSE_1_0.txt.
This product includes software copyright © 1997-2007 University of Cambridge. Permissions and limitations regarding this software are subject to terms available at
http:// www.pcre.org/license.txt.
This product includes software copyright © 2007 The Eclipse Foundation. All Rights Reserved. Permissions and limitations regarding this software are subject to terms
available at http:// www.eclipse.org/org/documents/epl-v10.php and at http://www.eclipse.org/org/documents/edl-v10.php.

This product includes software licensed under the terms at http://www.tcl.tk/software/tcltk/license.html, http://www.bosrup.com/web/overlib/?License, http://
www.stlport.org/doc/ license.html, http://asm.ow2.org/license.html, http://www.cryptix.org/LICENSE.TXT, http://hsqldb.org/web/hsqlLicense.html, http://
httpunit.sourceforge.net/doc/ license.html, http://jung.sourceforge.net/license.txt , http://www.gzip.org/zlib/zlib_license.html, http://www.openldap.org/software/
release/license.html, http://www.libssh2.org, http://slf4j.org/license.html, http://www.sente.ch/software/OpenSourceLicense.html, http://fusesource.com/downloads/
license-agreements/fuse-message-broker-v-5-3- license-agreement; http://antlr.org/license.html; http://aopalliance.sourceforge.net/; http://www.bouncycastle.org/
licence.html; http://www.jgraph.com/jgraphdownload.html; http://www.jcraft.com/jsch/LICENSE.txt; http://jotm.objectweb.org/bsd_license.html; . http://www.w3.org/
Consortium/Legal/2002/copyright-software-20021231; http://www.slf4j.org/license.html; http://nanoxml.sourceforge.net/orig/copyright.html; http://www.json.org/
license.html; http://forge.ow2.org/projects/javaservice/, http://www.postgresql.org/about/licence.html, http://www.sqlite.org/copyright.html, http://www.tcl.tk/
software/tcltk/license.html, http://www.jaxen.org/faq.html, http://www.jdom.org/docs/faq.html, http://www.slf4j.org/license.html; http://www.iodbc.org/dataspace/
iodbc/wiki/iODBC/License; http://www.keplerproject.org/md5/license.html; http://www.toedter.com/en/jcalendar/license.html; http://www.edankert.com/bounce/
index.html; http://www.net-snmp.org/about/license.html; http://www.openmdx.org/#FAQ; http://www.php.net/license/3_01.txt; http://srp.stanford.edu/license.txt;
http://www.schneier.com/blowfish.html; http://www.jmock.org/license.html; http://xsom.java.net; http://benalman.com/about/license/; https://github.com/CreateJS/
EaselJS/blob/master/src/easeljs/display/Bitmap.js; http://www.h2database.com/html/license.html#summary; http://jsoncpp.sourceforge.net/LICENSE; http://
jdbc.postgresql.org/license.html; http://protobuf.googlecode.com/svn/trunk/src/google/protobuf/descriptor.proto; https://github.com/rantav/hector/blob/master/
LICENSE; http://web.mit.edu/Kerberos/krb5-current/doc/mitK5license.html; http://jibx.sourceforge.net/jibx-license.html; https://github.com/lyokato/libgeohash/blob/
master/LICENSE; https://github.com/hjiang/jsonxx/blob/master/LICENSE; https://code.google.com/p/lz4/; https://github.com/jedisct1/libsodium/blob/master/
LICENSE; http://one-jar.sourceforge.net/index.php?page=documents&file=license; https://github.com/EsotericSoftware/kryo/blob/master/license.txt; http://www.scalalang.org/license.html; https://github.com/tinkerpop/blueprints/blob/master/LICENSE.txt; http://gee.cs.oswego.edu/dl/classes/EDU/oswego/cs/dl/util/concurrent/
intro.html; https://aws.amazon.com/asl/; https://github.com/twbs/bootstrap/blob/master/LICENSE; https://sourceforge.net/p/xmlunit/code/HEAD/tree/trunk/
LICENSE.txt; https://github.com/documentcloud/underscore-contrib/blob/master/LICENSE, and https://github.com/apache/hbase/blob/master/LICENSE.txt.
This product includes software licensed under the Academic Free License (http://www.opensource.org/licenses/afl-3.0.php), the Common Development and
Distribution License (http://www.opensource.org/licenses/cddl1.php) the Common Public License (http://www.opensource.org/licenses/cpl1.0.php), the Sun Binary
Code License Agreement Supplemental License Terms, the BSD License (http:// www.opensource.org/licenses/bsd-license.php), the new BSD License (http://
opensource.org/licenses/BSD-3-Clause), the MIT License (http://www.opensource.org/licenses/mit-license.php), the Artistic License (http://www.opensource.org/
licenses/artistic-license-1.0) and the Initial Developer’s Public License Version 1.0 (http://www.firebirdsql.org/en/initial-developer-s-public-license-version-1-0/).
This product includes software copyright © 2003-2006 Joe WaInes, 2006-2007 XStream Committers. All rights reserved. Permissions and limitations regarding this
software are subject to terms available at http://xstream.codehaus.org/license.html. This product includes software developed by the Indiana University Extreme! Lab.
For further information please visit http://www.extreme.indiana.edu/.
This product includes software Copyright (c) 2013 Frank Balluffi and Markus Moeller. All rights reserved. Permissions and limitations regarding this software are subject
to terms of the MIT license.
See patents at https://www.informatica.com/legal/patents.html.
DISCLAIMER: Informatica LLC provides this documentation "as is" without warranty of any kind, either express or implied, including, but not limited to, the implied
warranties of noninfringement, merchantability, or use for a particular purpose. Informatica LLC does not warrant that this software or documentation is error free. The
information provided in this software or documentation may include technical inaccuracies or typographical errors. The information in this software and documentation
is subject to change at any time without notice.
NOTICES
This Informatica product (the "Software") includes certain drivers (the "DataDirect Drivers") from DataDirect Technologies, an operating company of Progress Software
Corporation ("DataDirect") which are subject to the following terms and conditions:
1. THE DATADIRECT DRIVERS ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO,
THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.
2. IN NO EVENT WILL DATADIRECT OR ITS THIRD PARTY SUPPLIERS BE LIABLE TO THE END-USER CUSTOMER FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, CONSEQUENTIAL OR OTHER DAMAGES ARISING OUT OF THE USE OF THE ODBC DRIVERS, WHETHER OR NOT INFORMED OF THE POSSIBILITIES
OF DAMAGES IN ADVANCE. THESE LIMITATIONS APPLY TO ALL CAUSES OF ACTION, INCLUDING, WITHOUT LIMITATION, BREACH OF CONTRACT, BREACH
OF WARRANTY, NEGLIGENCE, STRICT LIABILITY, MISREPRESENTATION AND OTHER TORTS.
Publication Date: 2025-04-03

Table of Contents
Preface . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5
Chapter 1: Introduction to Google Vertex AI Connector. . . . . . . . . . . . . . . . . . . . . . . . 6
Google Vertex AI overview. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 6

Chapter 2: Google Vertex AI connections. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8
Basic connection properties. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8
Google Vertex AI connection properties. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 9
Google Vertex AI connection metadata. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 9
Publishing Google Vertex AI connections. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 10
Using a Google Vertex AI connection in a process. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 13

4

Table of Contents

Preface
Read the Google Vertex AI Connector Guide to learn how to set up and use Google Vertex AI connections. This
guide assumes that you have an understanding of the Google Vertex AI concepts.

5

Chapter 1

Introduction to Google Vertex AI
Connector
Use Google Vertex AI Connector to easily integrate Vertex AI with various data sources and tools, increasing
the functionality and reach of your machine learning workflows.
You can use Google Vertex AI Connector to achieve use cases, such as data ingestion, feature engineering,
model training and validation, and business intelligence integration.
Google Vertex AI Connector provides the following key features:
•

Streamlines the flow of data between Vertex AI and other Google Cloud services, such as BigQuery,
Google Cloud Storage, and Dataproc, allowing for seamless data management and processing.

•

Enables Vertex AI to connect with external data sources, enhancing the ability to build and train models on
diverse datasets.

•

Provides a smooth data integration experience, reducing the manual workload of moving and preparing
data for machine learning tasks.

•

Supports live data streams, ensuring that models can be trained and updated with the latest information.

•

Facilitates automated workflows by integrating with other tools, helping to streamline model development,
deployment, and monitoring processes.

•

Provides a unified interface to access various data sources and manage machine learning (ML)
workflows.

•

Ensures secure data handling and compliance with industry standards when working with sensitive
information.

Google Vertex AI overview
Google Vertex AI is a managed machine learning platform provided by Google Cloud that enables users to
build, deploy, and scale machine learning models. It is designed to streamline the development and
deployment of ML models. Vertex AI combines Google Cloud’s powerful services into a unified environment.
Google Vertex AI provides the following key features:

6

•

Provides a single interface to manage all stages of the ML workflow, including data preprocessing, model
training, verification, deployment, and monitoring.

•

Includes access to pre-trained APIs for common tasks, such as image analysis and text processing.

•

Supports custom model development using frameworks, such as TensorFlow, PyTorch, and Scikit-learn. It
simplifies the training process with a managed infrastructure.

•

Offers tools for managing model operations (MLOps) to automate and streamline the deployment, scaling,
and maintenance of models.

•

Vertex AI's AutoML feature automates the model training process, enabling users with minimal ML
expertise to build models effectively.

•

Provides scalable compute resources, allowing models to be trained and deployed on an infrastructure
that automatically scales according to demand.

•

Simplifies versioning, deployment, and monitoring of models, ensuring that they perform as expected in
production environments.

•

Offers tools to understand model predictions and eliminate possible issues.

•

Integrates with other Google Cloud services and supports collaboration.

Google Vertex AI overview

7

Chapter 2

Google Vertex AI connections
Use a Google Vertex AI connection to integrate with various data sources and services, and build
comprehensive and flexible machine learning workflows.
You can perform various actions, such as generating content, function calling, grounding, text embeddings,
and multimodal embeddings using the access token and model ID.
After you create a Google Vertex AI connection, you can validate, test, and save the connection.
You can then publish the Google Vertex AI connection and click the Metadata tab to view the generated
process objects for the connection.

Basic connection properties
The following table describes the basic properties that you can configure on the Properties tab of the
connection creation page:
Property

Description

Name

Required. Unique name for the Google Vertex AI connection that identifies it in the Process
Designer. The name must start with an alphabet and can contain only alphabets, numbers, and
hyphens (-).

Location

The location of the project or folder where you want to save the connection. Click Browse to
select a location.
If the Explore page is currently active and a project or folder is selected, the default location for
the connection is the selected project or folder. Otherwise, the default location is the location of
the most recently saved asset.

Description

Optional. Description of the connection.

Type

Required. The type of connection you want to use for the connector or service connector.
Select Google Vertex AI.

8

Runtime
Environment

Required. The runtime environment for the connection. You can run the connection on the Cloud
Server, a Secure Agent group, or a Secure Agent machine.

Connection Test

Not supported for Google Vertex AI Connector.

OData-Enabled

Not supported for Google Vertex AI Connector.

Google Vertex AI connection properties
To use Google Vertex AI, you need the project ID and private key to access the service account.
The following table defines the Google Vertex AI connection properties that you must configure in the
Connection Properties section:
Property

Description

Project_ID

The project ID to generate a valid access token.

Location

The region to process the request.

Private_Key_ID

The private key ID associated with the service account.

Client_Email

The email address associated with the service account.

Private_Key

The Google Vertex AI private key associated with the service account. Enter the PKCS1 certificate as
a Base64-encoded string in the following format:
-----BEGIN PRIVATE KEY----- ..... n-----END PRIVATE KEY-----

Google Vertex AI connection metadata
After you create a Google Vertex AI connection, you can validate and save the connection. You can then
publish the Google Vertex AI connection and click the Metadata tab to view the generated process objects for
the connection.
When you publish a Google Vertex AI connection in Application Integration, the Actions and Objects appear
on the Metadata tab.
The following image shows the Metadata tab for a published Google Vertex AI connection:

Google Vertex AI connection properties

9

Publishing Google Vertex AI connections
When you publish a Google Vertex AI connection in Application Integration, the Actions and Objects appear
on the Metadata tab.
Consider the following information when you use specific actions and objects:
•

The Generate content action generates a response from the model based on the given input. It creates a
requestBody that contains fields with different types, such as string or array.
You must insert the access_token field from the Get access token action and the model_ID field to call the
model, and create a payload. For example, the model_ID value can be gemini-1.5-flash-001 or
gemini-1.5-pro-001.
The following snippet is a sample to build a requestBody object:
<root>
<contents>
<role>user</role>
<parts>
<text>Describe what you hear in this audio</text>
</parts>
<parts>
<inlineData>
<mimeType>audio/aac</mimeType>
<data>{BASE64ENCODED}</data>
</inlineData>
</parts>
</contents>
<generationConfig>
<temperature>0.5</temperature>
<maxOutputTokens>200</maxOutputTokens>
<topP>0.8</topP>
<topK>10</topK>

10

Chapter 2: Google Vertex AI connections

</generationConfig>
</root>
If fields in the requestBody need to be in different formats, you must add additional namespaces as
shown in the following sample code:
<root xmlns:m="urn:informatica:ae:xquery:json2xml:meta-data">
<field_array m:isArray="true">
<property_1> ...</property_1>
</field_array>
<field_boolean m:type="xs:boolean">true</field_boolean>
<field_double m:type="xs:double">20.2</field_double>
<field_integer m:type="xs:int">10</field_integer>
</root>
•

The Function calling action generates a response from the model based on the given input with the
Function Calling API.
You must insert the access_token field from the Get access token action and the model_ID field to call the
model, and create a payload. For example, the model_ID value can be gemini-1.5-flash-001 or
gemini-1.5-pro-001.
The following snippet is a sample to build a requestBody object:
<root xmlns:m="urn:informatica:ae:xquery:json2xml:meta-data">
<contents>
<role>user</role>
<parts>
<text>What is the weather in Boston, MA?</text>
</parts>
</contents>
<tools>
<functionDeclarations>
<name>get_current_weather</name>
<description>Get the current weather in a given location</description>
<parameters>
<type>object</type>
<properties>
<location>
<type>string</type>
<description>The city and state, e.g. San Francisco, CA or a
zip code e.g. 95616</description>
</location>
</properties>
<required m:isArray="true">location</required>
</parameters>
</functionDeclarations>
</tools>
</root>
If fields in the requestBody need to be in different formats, you must add additional namespaces as
shown in the following sample code:
<root xmlns:m="urn:informatica:ae:xquery:json2xml:meta-data">
<field_array m:isArray="true">
<property_1> ...</property_1>
</field_array>
<field_boolean m:type="xs:boolean">true</field_boolean>
<field_double m:type="xs:double">20.2</field_double>
<field_integer m:type="xs:int">10</field_integer>
</root>

•

The Grounding action generates a response from the model based on the given input and connects the
model output to verifiable sources of information.
You must insert the access_token field from the Get access token action and the model_ID field to call the
model, and create a payload. For example, the model_ID value can be gemini-1.5-flash-001 or
gemini-1.5-pro-001.

Publishing Google Vertex AI connections

11

The following snippet is a sample to build a requestBody object:
<root>
<contents>
<role>user</role>
<parts>
<text>Can you provide the latest information on climate change's impact
on polar bears?</text>
</parts>
</contents>
<tools>
<googleSearchRetrieval />
</tools>
</root>
If fields in the requestBody need to be in different formats, you must add additional namespaces as
shown in the following sample code:
<root xmlns:m="urn:informatica:ae:xquery:json2xml:meta-data">
<field_array m:isArray="true">
<property_1> ...</property_1>
</field_array>
<field_boolean m:type="xs:boolean">true</field_boolean>
<field_double m:type="xs:double">20.2</field_double>
<field_integer m:type="xs:int">10</field_integer>
</root>
•

The Text embeddings action generates an embedding from the model based on the given input.
You must insert the access_token field from the Get access token action and the model_ID field to call the
model, and create a payload. For example, the model_ID value can be textembedding-geckomultilingual@001 or text-multilingual-embedding-002.
The following snippet is a sample to build a requestBody object:
<root>
<instances>
<task_type>RETRIEVAL_DOCUMENT</task_type>
<title>document title</title>
<content>I would like embeddings for this text!</content>
</instances>
</root>
If fields in the requestBody need to be in different formats, you must add additional namespaces as
shown in the following sample code:
<root xmlns:m="urn:informatica:ae:xquery:json2xml:meta-data">
<field_array m:isArray="true">
<property_1> ...</property_1>
</field_array>
<field_boolean m:type="xs:boolean">true</field_boolean>
<field_double m:type="xs:double">20.2</field_double>
<field_integer m:type="xs:int">10</field_integer>
</root>

•

The Multimodal embeddings action generates an embedding from the model based on the given input,
which can include a combination of image, text, and video data.
You must insert the access_token field from the Get access token action and the model_ID field to call the
model, and create a payload. For example, the model_ID value can be multimodalembedding@001.
The following snippet is a sample to build a requestBody object:
<root>
<instances>
<text>Describe what you see</text>
<video>
<bytesBase64Encoded>{BASE64ENCODED}</bytesBase64Encoded>
<videoSegmentConfig>
<endOffsetSec>1</endOffsetSec>
</videoSegmentConfig>
</video>
<parameters>

12

Chapter 2: Google Vertex AI connections

<dimension>1536</dimension>
</parameters>
</instances>
</root>
If fields in the requestBody need to be in different formats, you must add additional namespaces as
shown in the following sample code:
<root xmlns:m="urn:informatica:ae:xquery:json2xml:meta-data">
<field_array m:isArray="true">
<property_1> ...</property_1>
</field_array>
<field_boolean m:type="xs:boolean">true</field_boolean>
<field_double m:type="xs:double">20.2</field_double>
<field_integer m:type="xs:int">10</field_integer>
</root>

Using a Google Vertex AI connection in a process
After you create a Google Vertex AI connection, you can use it in a Service step in a process.
1.

Add a Service step to the process.

2.

Click the Service tab.

3.

From the Service Type list, select Connection.

4.

From the Connection list, browse and select the Google Vertex AI connection that you created.

5.

From the Action list, select the action that you want to perform. For example, select the Generate
content action to generate a response from the model based on the given input as shown in the
following image:

In this case, Application Integration populates the access_token, model_ID, and requestBody objects
under the input fields and response under the output fields.
6.

Configure further steps as needed.

7.

Validate, save, and publish the process.

Using a Google Vertex AI connection in a process

13

