[
  {
    "chunk_id": "Vertex_AI_RAG_Engine_overview_semantic_0",
    "text": "02/10/2025, 16:09\n\nVertex AI RAG Engine overview | Generative AI on Vertex AI | Google Cloud\n\nVertex AI RAG Engine overview\nThe VPC-SC security controls (/vertex-ai/generative-ai/docs/security-controls) and CMEK are supported\nby Vertex AI RAG Engine. Data residency and AXT security controls aren't supported. The Vertex AI RAG Engine-managed Spanner instance is used as a vector database and is GA with billing\nenabled. For more information, see Vertex AI RAG Engine billing\n(/vertex-ai/generative-ai/docs/rag-engine/rag-engine-billing). You must be added to the allowlist to access Vertex AI RAG Engine in us-central1.",
    "metadata": {
      "num_sentences": 5,
      "num_words": 87,
      "strategy": "semantic",
      "start_index": 0,
      "end_index": 5
    }
  },
  {
    "chunk_id": "Vertex_AI_RAG_Engine_overview_semantic_1",
    "text": "For users with\nexisting projects, there is no impact. For users with new projects, you can try other regions, or contact\n\nvertex-ai-rag-engine-support@google.com to onboard to us-central1. This page describes what Vertex AI RAG Engine is and how it works. Description\n\nConsole\n\nTo learn how to use the Vertex AI SDK to run Vertex\n\nTry Vertex AI RAG Engine (https://console.cloud.goo\n\nAI RAG Engine tasks, see the RAG quickstart for\nPython\n(/vertex-ai/generative-ai/docs/rag-quickstart). Overview\nVertex AI RAG Engine, a component of the Vertex AI Platform, facilitates RetrievalAugmented Generation (RAG). Vertex AI RAG Engine is also a data framework for\ndeveloping context-augmented large language model (LLM) applications. Context\naugmentation occurs when you apply an LLM to your data. This implements retrievalaugmented generation (RAG). A common problem with LLMs is that they don't understand private knowledge, that is, your\norganization's data. With Vertex AI RAG Engine, you can enrich the LLM context with\nadditional private information, because the model can reduce hallucination and answer\nquestions more accurately. https://cloud.google.com/vertex-ai/generative-ai/docs/rag-engine/rag-overview\n\n1/4\n\n\f02/10/2025, 16:09\n\nVertex AI RAG Engine overview | Generative AI on Vertex AI | Google Cloud\n\nBy combining additional knowledge sources with the existing knowledge that LLMs have, a\nbetter context is provided. The improved context along with the query enhances the quality\nof the LLM's response. The following image illustrates the key concepts to understanding Vertex AI RAG Engine. These concepts are listed in the order of the retrieval-augmented generation (RAG) process. 1. Data ingestion: Intake data from different data sources. For example, local files, Cloud\nStorage, and Google Drive.",
    "metadata": {
      "num_sentences": 17,
      "num_words": 255,
      "strategy": "semantic",
      "start_index": 5,
      "end_index": 22
    }
  },
  {
    "chunk_id": "Vertex_AI_RAG_Engine_overview_semantic_2",
    "text": "2. Data transformation (/vertex-ai/generative-ai/docs/fine-tune-rag-transformations):\nConversion of the data in preparation for indexing. For example, data is split into\nchunks.",
    "metadata": {
      "num_sentences": 3,
      "num_words": 19,
      "strategy": "semantic",
      "start_index": 22,
      "end_index": 25
    }
  },
  {
    "chunk_id": "Vertex_AI_RAG_Engine_overview_semantic_3",
    "text": "Embedding (/vertex-ai/generative-ai/docs/embeddings/get-text-embeddings): Numerical\nrepresentations of words or pieces of text. These numbers capture the semantic\nmeaning and context of the text. Similar or related words or text tend to have similar\nembeddings, which means they are closer together in the high-dimensional vector\nspace.",
    "metadata": {
      "num_sentences": 3,
      "num_words": 43,
      "strategy": "semantic",
      "start_index": 26,
      "end_index": 29
    }
  },
  {
    "chunk_id": "Vertex_AI_RAG_Engine_overview_semantic_4",
    "text": "Data indexing: Vertex AI RAG Engine creates an index called a corpus\n(/vertex-ai/generative-ai/docs/manage-your-rag-corpus#corpus-management). The index\n\nstructures the knowledge base so it's optimized for searching. For example, the index\nis like a detailed table of contents for a massive reference book.",
    "metadata": {
      "num_sentences": 3,
      "num_words": 40,
      "strategy": "semantic",
      "start_index": 30,
      "end_index": 33
    }
  },
  {
    "chunk_id": "Vertex_AI_RAG_Engine_overview_semantic_5",
    "text": "6. Generation: The retrieved information becomes the context added to the original user\nquery as a guide for the generative AI model to generate factually grounded\n(/vertex-ai/generative-ai/docs/grounding/overview) and relevant responses. https://cloud.google.com/vertex-ai/generative-ai/docs/rag-engine/rag-overview\n\n2/4\n\n\f02/10/2025, 16:09\n\nVertex AI RAG Engine overview | Generative AI on Vertex AI | Google Cloud\n\nSupported regions\nVertex AI RAG Engine is supported in the following regions:\n\nRegion\n\nLocation\n\nDescription\n\nLaunch stage\n\nus-central1\n\nIowa\n\nv1 and v1beta1 versions are supported. Allowlist\n\nus-east4\n\nVirginia\n\nv1 and v1beta1 versions are supported. GA\n\nv1 and v1beta1 versions are supported. GA\n\neurope-west4 Eemshaven, Netherlands v1 and v1beta1 versions are supported. GA\n\neurope-west3 Frankfurt, Germany\n\nus-central1 is changed to Allowlist. If you'd like to experiment with Vertex AI RAG\nEngine, try other regions. If you plan to onboard your production traffic to uscentral1, contact vertex-ai-rag-engine-support@google.com. Delete Vertex AI RAG Engine\nThe following code samples demonstrate how to delete a Vertex AI RAG Engine for the\nGoogle Cloud console, Python, and REST:\nVersion 1 (v1) API parameters\n(/vertex-ai/generative-ai/docs/model-reference/rag-api-v1#project-management-params-api)\n\nand code samples\n(/vertex-ai/generative-ai/docs/model-reference/rag-apiv1#update_your_ragengineconfig_to_the_unprovisioned_tier)\n\n. v1beta1 API parameters\n(/vertex-ai/generative-ai/docs/model-reference/rag-api#project-management-params-api) and\n\ncode samples\n(/vertex-ai/generative-ai/docs/model-reference/ragapi#update_your_ragengineconfig_to_the_unprovisioned_tier)\n\n. Submit feedback\n\nhttps://cloud.google.com/vertex-ai/generative-ai/docs/rag-engine/rag-overview\n\n3/4\n\n\f02/10/2025, 16:09\n\nVertex AI RAG Engine overview | Generative AI on Vertex AI | Google Cloud\n\nTo chat with Google support, go to the Vertex AI RAG Engine support group\n(https://groups.google.com/a/google.com/g/vertex-ai-rag-engine-support). To send an email, use the email address vertex-ai-rag-engine-support@google.com. What's next\nTo learn how to use the Vertex AI SDK to run Vertex AI RAG Engine tasks, see RAG\nquickstart for Python (/vertex-ai/generative-ai/docs/rag-quickstart). To learn about grounding, see Grounding overview\n(/vertex-ai/generative-ai/docs/grounding/overview). To learn more about the responses from RAG, see Retrieval and Generation Output of\nVertex AI RAG Engine (/vertex-ai/generative-ai/docs/model-reference/rag-output-explained). To learn about the RAG architecture:\nInfrastructure for a RAG-capable generative AI application using Vertex AI and\nVector Search (/architecture/gen-ai-rag-vertex-ai-vector-search)\nInfrastructure for a RAG-capable generative AI application using Vertex AI and\nAlloyDB for PostgreSQL (/architecture/rag-capable-gen-ai-app-using-vertex-ai). Except as otherwise noted, the content of this page is licensed under the Creative Commons Attribution 4.0\nLicense (https://creativecommons.org/licenses/by/4.0/), and code samples are licensed under the Apache\n2.0 License (https://www.apache.org/licenses/LICENSE-2.0). For details, see the Google Developers Site\nPolicies (https://developers.google.com/site-policies). Java is a registered trademark of Oracle and/or its\naffiliates. Last updated 2025-10-02 UTC. https://cloud.google.com/vertex-ai/generative-ai/docs/rag-engine/rag-overview\n\n4/4",
    "metadata": {
      "num_sentences": 22,
      "num_words": 364,
      "strategy": "semantic",
      "start_index": 35,
      "end_index": 57
    }
  }
]